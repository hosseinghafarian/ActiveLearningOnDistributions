function [Classification_exp_param] = make_classification_experiment(distributional)
% TODO: in classification methods we must not call any function for generating kernel, we must use data.K or data.K_o
    if ~distributional
        Classification_exp_param  = { ...
            set_classification_experiment('Simple1'    ,@Simple_complex_classifier_3,    @Simple_complex_test_1, @make_learning_list, 1,...
                                          'SVM'        ,@SVMtrain                   ,    @SVMtester,...
                                          'Complex'    ,@Complex_test_1, 'two_kernel', true),... 
            set_classification_experiment('CHR'        ,@LEARNINGWithRejection_CHR,      @STANDARDW_b_test, @CHR_make_learning_list, 1, 'two_kernel', true),...
          };
    else
%         Classification_exp_param  = { ...   
%             set_classification_experiment('SMML2',      @SMML2train,     @SMML2test,       @SMML2_make_learning_list, 1),...
%             set_classification_experiment('SMM',        @SMMtrain,       @SMMtest,         @SMM_make_learning_list,     1),...
%                      };    
        Classification_exp_param  = { ...        
            set_classification_experiment('SMMOnline',             @SMMOnlinetrain,                         @SMMOnlinetest,                         @SMMOnline_make_learning_list,     0), ...
        };
%         Classification_exp_param  = { ...        
%             set_classification_experiment('SMMOnline',             @SMMOnlinetrain,                         @SMMOnlinetest,                         @SMMOnline_make_learning_list,     0), ...
%             set_classification_experiment('SMM',                   @SMMtrain,                               @SMMtest,                               @SMM_make_learning_list,       1), ...
%             set_classification_experiment('SVMword2vec',           @SVMtrain_word2vecseriesappend,          @SVMtester_word2vecseriesappend,        @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('NaiveBayesword2vec',    @NaiveBayestrain_word2vecseriesappend,   @NaiveBayestest_word2vecseriesappend,   @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('DecisionTreetword2vec', @DecisionTreetrain_word2vecseriesappend, @DecisionTreetest_word2vecseriesappend, @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('KNNword2vec',           @KNNtrain_word2vecseriesappend,          @KNNtest_word2vecseriesappend,          @KNNmake_learning_list,      0),...                                           
%          };
%      set_classification_experiment('SMM',                   @SMMtrain,                               @SMMtest,                @SMM_make_learning_list,     1, ...
%                                            'SVMword2vec',          @SVMtrain_word2vecseriesappend,          @SVMtester_word2vecseriesappend),...
%         Classification_exp_param  = { ...        
%             set_classification_experiment('SVMtfidf',          @SVMtrain_tfidf,          @SVMtester_tfidf,        @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('NaiveBayestfidf',   @NaiveBayestrain_tfidf,   @NaiveBayestest_tfidf,   @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('DecisionTreetfidf', @DecisionTreetrain_tfidf, @DecisionTreetest_tfidf, @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('KNNtfidf',          @KNNtrain_tfidf,          @KNNtest_tfidf,          @KNNmake_learning_list,      0),...
%             set_classification_experiment('SVMword2vec',           @SVMtrain_word2vecseriesappend,          @SVMtester_word2vecseriesappend,        @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('NaiveBayesword2vec',    @NaiveBayestrain_word2vecseriesappend,   @NaiveBayestest_word2vecseriesappend,   @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('DecisionTreetword2vec', @DecisionTreetrain_word2vecseriesappend, @DecisionTreetest_word2vecseriesappend, @SVMtfidfmake_learning_list, 0),...
%             set_classification_experiment('KNNword2vec',           @KNNtrain_word2vecseriesappend,          @KNNtest_word2vecseriesappend,          @KNNmake_learning_list,      0),...
%             set_classification_experiment('SMM',               @SMMtrain,                @SMMtest,                @SMM_make_learning_list,     1),...
%           };
    %   set_classification_experiment('SMM3way',           @SMM3waytrain,            @SMM3waytest,            @SMM3way_make_learning_list,     1, ...
    %                                       'SMM',               @SMMtrain,                @SMMtest),...
      %set_classification_experiment('SMM',      @SMML2train,     @SMML2test,       @SMML2_make_learning_list),...
      %set_classification_experiment('SMM',               @SMMtrain,                @SMMtest,                @SMM_make_learning_list,     1),...
    end
end
% 
% Classification_exp_param  = { ...
%     set_classification_experiment('SCC1' ,@Simple_complex_classifier_1, @Simple_complex_test_1, @make_learning_list),...
%                                         set_classification_experiment('SCCiter' ,@Simple_complex_classifier_iter_1, @Simple_complex_test_1, @make_learning_list),...
%                                         set_classification_experiment('SCC2'     ,@Simple_complex_classifier_2, @Simple_complex_test_1, @make_learning_list),...
%                                         
%                                         set_classification_experiment('CHR'     ,@LEARNINGWithRejection_CHR,   @STANDARDW_b_test, @CHR_make_learning_list),...
%                                         set_classification_experiment('ABLATION',@RSVM_OutlierAblation,        @Simple_complex_test_1,@OUTLIERABLATION_make_learning_list),...
%                                         };
%Classification_exp_param            = { set_classification_experiment('Ga_search' ,@Simple_complex_classifier_ga_noninteger, @STANDARDW_test, @make_learning_list),...
%                                        set_classification_experiment('CHR'     ,@LEARNINGWithRejection_CHR,   @STANDARDW_b_test, @CHR_make_learning_list),...
%                                        }; %set_classification_experiment(@RSVM_RegularizationOfCaseSpecificParameters,   @STANDARDW_b_test),...
